// script.js
// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞
let currentLang = localStorage.getItem('language') || 'ru';

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
const translations = {
    ru: {
        title: "–ú–æ—è —Å—Ç—Ä–∞–Ω–∏—á–∫–∞",
        greetings: "–ü—Ä–∏–≤–µ—Ç, –ú–µ–Ω—è –∑–æ–≤—É—Ç –ù–∏–∫–∏—Ç–∞ –∏ —ç—Ç–æ –º–æ–µ –Ω–∞—á–∞–ª–æ –≤ it",
        lightTheme: "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞",
        darkTheme: "–¢—ë–º–Ω–∞—è —Ç–µ–º–∞",
        about: "–û–±–æ –º–Ω–µ",
        age: "–ú–Ω–µ 17 –ª–µ—Ç, –∏ —ç—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π –æ–ø—ã—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–π—Ç–∞.",
        hobby: "–õ—é–±–ª—é –º—É–∑—ã–∫—É, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∫–∏–Ω–æ, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –≤ —á–µ–º –ª–∏–±–æ.",
        media: "–°–æ—Ü.–°–µ—Ç–∏:",
        skills: "–ú–æ–∏ –Ω–∞–≤—ã–∫–∏",
        adaptation: "–∞–¥–∞–ø—Ç–∞—Ü–∏—è",
        musicaltaste: "–º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –≤–∫—É—Å",
        perseverance: "–Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å",
        works: "–ú–æ–∏ —Ä–∞–±–æ—Ç—ã",
        linkgh: "–ê –∑–¥–µ—Å—å —è –ø–æ—Ç–æ–º –ø–æ–∫–∞–∂—É —Å–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã.",
        githubLink: "–ú–æ–π GitHub",
        langButton: "üåê English",
        resume: "üìÑ –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—é–º–µ",
        projects: "–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã",
        project1Title: "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–π—Ç-–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ",
        project1Desc: "–°–∞–π—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Å–µ–π—á–∞—Å –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ. –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞, –º–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç—å –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω.",
        project2Title: "–ò–≥—Ä–∞ '–í–∏–∫—Ç–æ—Ä–∏–Ω–∞'",
        project2Desc: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é. –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
        project3Title: "–ü–æ–≥–æ–¥–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", 
        project3Desc: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–≥–æ–¥—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API. –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."
    },
    en: {
        title: "My Page",
        greetings: "Hi, my name Nikita and this is my start in IT",
        lightTheme: "Light theme",
        darkTheme: "Dark theme",
        about: "About Me",
        age: "I am 17 years old, and this is my first experience in creating a website.",
        hobby: "I love music, quality movies, and also improving my skills in anything.",
        media: "Social Media:",
        skills: "My Skills",
        adaptation: "adaptability",
        musicaltaste: "music taste",
        perseverance: "perseverance",
        works: "My Works",
        linkgh: "And here I will show my projects later.",
        githubLink: "My GitHub",
        langButton: "üåê –†—É—Å—Å–∫–∏–π",
        resume: "üìÑ Download resume",
        projects: "My Projects",
        project1Title: "Personal Portfolio Website",
        project1Desc: "The website you are currently viewing. Features dark theme, multilingual support and responsive design.",
        project2Title: "Quiz Game",
        project2Desc: "Interactive programming quiz game. In development.",
        project3Title: "Weather App",
        project3Desc: "Weather application using API. In development."
    }
};

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω (—Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ)
const projectsData = {
    portfolio: {
        technologies: ['HTML', 'CSS', 'JavaScript', 'Git'],
        github: 'https://github.com/roadtopromt/first-website',
        demo: 'https://roadtopromt.github.io/first-website'
    },
    quiz: {
        technologies: ['HTML', 'CSS', 'JavaScript'],
        github: '#',
        demo: '#'
    },
    weather: {
        technologies: ['API', 'JavaScript', 'CSS'],
        github: '#',
        demo: '#'
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —è–∑—ã–∫–∞
function setLanguage(lang) {
    const elements = document.querySelectorAll('[data-translate]');
    
    // 1. –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    elements.forEach(element => {
        element.classList.add('fade-out');
    });
    
    // 2. –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
    setTimeout(() => {
        elements.forEach(element => {
            const key = element.getAttribute('data-translate');
            if (translations[lang] && translations[lang][key]) {
                element.textContent = translations[lang][key];
            }
            element.classList.remove('fade-out');
            element.classList.add('fade-in');
        });
        
        document.title = translations[lang].title;
        localStorage.setItem('language', lang);
        currentLang = lang; // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        
        // 3. –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            elements.forEach(element => {
                element.classList.remove('fade-in');
            });
        }, 300);
        
    }, 300);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ —Ç–µ–º—ã
function updateThemeButtonText() {
    const currentLang = localStorage.getItem('language') || 'ru';
    const isDarkTheme = document.body.classList.contains('dark-theme');
    const translationKey = isDarkTheme ? 'lightTheme' : 'darkTheme';
    const themeToggleButton = document.getElementById('themeToggle');
    
    if (themeToggleButton && translations[currentLang]) {
        themeToggleButton.textContent = translations[currentLang][translationKey];
        themeToggleButton.setAttribute('data-translate', translationKey);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∞
function updateLangButton(lang) {
    const langButton = document.getElementById('translations');
    if (langButton && translations[lang]) {
        langButton.textContent = translations[lang].langButton;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
function initScrollAnimations() {
    const elementsToAnimate = document.querySelectorAll(
        '.project-card, section, h2, h1, .gallery'
    );
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    elementsToAnimate.forEach((element, index) => {
        element.classList.add('fade-in');
        element.classList.add(`delay-${index % 4}`);
    });
    
    // –°–æ–∑–¥–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                setTimeout(() => {
                    entry.target.classList.add('visible');
                }, 100);
            }
        });
    }, { 
        threshold: 0.1,
        rootMargin: '-50px'
    });
    
    // –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    elementsToAnimate.forEach(el => {
        observer.observe(el);
    });
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal(projectType) {
    const modal = document.getElementById('projectModal');
    const project = projectsData[projectType];
    const currentLang = localStorage.getItem('language') || 'ru';

    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è
    let titleKey, descKey;
    
    switch(projectType) {
        case 'portfolio':
            titleKey = 'project1Title';
            descKey = 'project1Desc';
            break;
        case 'quiz':
            titleKey = 'project2Title';
            descKey = 'project2Desc';
            break;
        case 'weather':
            titleKey = 'project3Title';
            descKey = 'project3Desc';
            break;
        default:
            titleKey = 'project1Title';
            descKey = 'project1Desc';
    }

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–º–∏
    document.getElementById('modalTitle').textContent = translations[currentLang][titleKey];
    document.getElementById('modalDescription').textContent = translations[currentLang][descKey];
    
    // –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
    const modalTech = document.getElementById('modalTech');
    modalTech.innerHTML = '';
    project.technologies.forEach(tech => {
        const span = document.createElement('span');
        span.textContent = tech;
        modalTech.appendChild(span);
    });
    
    // –°—Å—ã–ª–∫–∏
    document.getElementById('modalGitHub').href = project.github;
    document.getElementById('modalDemo').href = project.demo;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.classList.add('show');
    document.body.style.overflow = 'hidden';
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal() {
    const modal = document.getElementById('projectModal');
    modal.classList.remove('show');
    document.body.style.overflow = '';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function initModal() {
    const modal = document.getElementById('projectModal');
    const closeBtn = document.querySelector('.close-modal');
    const projectCards = document.querySelectorAll('.project-card');

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    projectCards.forEach(card => {
        card.addEventListener('click', function(e) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –Ω–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
            if (e.target.tagName === 'A' || e.target.closest('a')) {
                return;
            }
            
            const projectType = this.getAttribute('data-project');
            if (projectType) {
                openModal(projectType);
            }
        });
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeBtn.addEventListener('click', closeModal);
    modal.addEventListener('click', function(e) {
        if (e.target === modal) closeModal();
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') closeModal();
    });
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
document.addEventListener('DOMContentLoaded', function() {
    const themeToggleButton = document.getElementById('themeToggle');
    const body = document.body;
    const langButton = document.getElementById('translations');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –∏ —è–∑—ã–∫
    const savedTheme = localStorage.getItem('theme');
    const savedLang = localStorage.getItem('language') || 'ru';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    currentLang = savedLang;
    
    // –ï—Å–ª–∏ —Ç–µ–º–∞ –±—ã–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞, –ø—Ä–∏–º–µ–Ω—è–µ–º –µ–µ
    if (savedTheme === 'dark') {
        body.classList.add('dark-theme');
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    setLanguage(savedLang);
    updateLangButton(savedLang);
    updateThemeButtonText();
    
    // –í–µ—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ç–µ–º—ã
    themeToggleButton.addEventListener('click', function() {
        body.classList.toggle('dark-theme');
        
        if (body.classList.contains('dark-theme')) {
            localStorage.setItem('theme', 'dark');
        } else {
            localStorage.setItem('theme', 'light');
        }
        
        updateThemeButtonText();
    });
    
    // –í–µ—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–≤–æ–¥–∞
    langButton.addEventListener('click', function() {
        const currentLang = localStorage.getItem('language') || 'ru';
        const newLang = currentLang === 'ru' ? 'en' : 'ru';
        
        setLanguage(newLang);
        updateLangButton(newLang);
        updateThemeButtonText();
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    initModal();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–∫—Ä–æ–ª–ª–∞
    initScrollAnimations();
});

